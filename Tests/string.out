Token Stream
============

Line 1, Col 1: [STRING_LITERAL] single line string
Line 1, Col 19: [NEWLINE] 
Line 2, Col 1: [NEWLINE] 
Line 3, Col 1: [STRING_LITERAL] multiline string
Line 5, Col 8: [NEWLINE] 
Line 6, Col 1: [NEWLINE] 
Line 7, Col 1: [STRING_LITERAL] string inside
Line 7, Col 34: [NEWLINE] 
Line 8, Col 1: [NEWLINE] 
Line 9, Col 1: [STRING_LITERAL] \\ two slashes
Line 9, Col 17: [NEWLINE] 
Line 10, Col 1: [NEWLINE] 
Line 11, Col 1: [STRING_LITERAL] meaningless escapes
Line 11, Col 27: [NEWLINE] 

AST (Parsed)
============

SCRIPT
  SECTION: script_name="<UNNAMED>", display_name="<UNNAMED SECTION>"
    NARRATOR_SAY: text="single line string"
    SYSTEM_WAIT_INPUT
    NARRATOR_SAY: text="multiline string"
    SYSTEM_WAIT_INPUT
    NARRATOR_SAY: text="string inside"
    SYSTEM_WAIT_INPUT
    NARRATOR_SAY: text="\\ two slashes"
    SYSTEM_WAIT_INPUT
    NARRATOR_SAY: text="meaningless escapes"
    SYSTEM_WAIT_INPUT

AST (Checked)
=============

SCRIPT
  SECTION: script_name="<UNNAMED>", display_name="<UNNAMED SECTION>"
    NARRATOR_SAY: text="single line string"
    SYSTEM_WAIT_INPUT
    NARRATOR_SAY: text="multiline string"
    SYSTEM_WAIT_INPUT
    NARRATOR_SAY: text="string inside"
    SYSTEM_WAIT_INPUT
    NARRATOR_SAY: text="\\ two slashes"
    SYSTEM_WAIT_INPUT
    NARRATOR_SAY: text="meaningless escapes"
    SYSTEM_WAIT_INPUT

Symbol Tables: <UNNAMED>
========================

<UNNAMED>: Script

String Literals: <UNNAMED>
========================

"single line string"
"meaningless escapes"
"multiline string"
"string inside"
"\\ two slashes"

Target Code: <UNNAMED>
========================

narrator:say("single line string");
_w();
narrator:say("multiline string");
_w();
narrator:say("string inside");
_w();
narrator:say("\\ two slashes");
_w();
narrator:say("meaningless escapes");
_w();
